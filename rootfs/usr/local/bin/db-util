#!/usr/bin/env bash

exec_command() {
    mysql -ve "${1:?}" "${@:2}"
    return $?
}

user_exists() {
    USERNAME="${1:?USERNAME is required}"
    HOST="${2:-%}"

    exec_command "SELECT EXISTS(SELECT 1 FROM mysql.user WHERE user = '${USERNAME}' AND host = '${HOST}');" | grep -q '^1' || return 1
    return $?
}

db_exists() {
    DATABASE_NAME="${1:?DATABASE_NAME is required}"

    exec_command "SELECT EXISTS(SELECT 1 FROM mysql.db WHERE db = '${DATABASE_NAME}');" | grep -q '^1' || return 1
    return $?
}

# Create a user
create_user() {
    USERNAME="${1:?USERNAME is required}"
    PASSWORD="${2:?PASSWORD is required}"
    HOST="${3:-%}"

    # Default behavior is to create a database with the same name as the user.
    # This is controlled by the CREATE_USER_DB env var.
    CREATE_USER_DB=${CREATE_USER_DB:-true}

    exec_command "CREATE USER '${USERNAME}'@'${HOST}' IDENTIFIED BY '${PASSWORD}';" || return $?

    if [ "${CREATE_USER_DB}" = "true" ]; then
        create_db "${USERNAME}" "${USERNAME}"
        return $?
    fi

    return $?
}

create_db() {
    DATABASE_NAME="${1:?DATABASE_NAME is required}"
    exec_command "CREATE DATABASE ${DATABASE_NAME};"

    GRANT_TO_USER="${2:-}"
    if [ -n "${GRANT_TO_USER}" ]; then
        grant_privileges_on_db "${GRANT_TO_USER}" "${DATABASE_NAME}"
        return $?
    fi

    return $?
}

drop_db() {
    DATABASE_NAME="${1:?DATABASE_NAME is required}"
    exec_command "DROP DATABASE ${DATABASE_NAME};"
    return $?
}

grant_privileges_on_db() {
    USERNAME="${1:?USERNAME is required}"
    DATABASE_NAME="${2:?DATABASE_NAME is required}"
    HOST="${3:-%}"

    exec_command "GRANT ALL PRIVILEGES ON ${DATABASE_NAME}.* TO '${USERNAME}'@'${HOST}';"
    return $?
}

healthcheck() {
    if exec_command 'SELECT 1;'; then
        return 0
    fi

    return 1
}

main() {
    if [ ! -S "/run/mysqld/mysqld.sock" ]; then
        echo "Error: MySQL is not running"
        return 1
    fi

    COMMAND_NAMESPACE="${1:-_empty_}"

    # Switch case for multiple commands: create user, create database, etc.
    case "${COMMAND_NAMESPACE}" in
    user-exists)
        user_exists "${@:2}"
        return $?
        ;;
    db-exists)
        db_exists "${@:2}"
        return $?
        ;;
    create-user)
        create_user "${@:2}"
        return $?
        ;;
    create-db)
        create_db "${@:2}"
        return $?
        ;;
    drop-db)
        drop_db "${@:2}"
        return $?
        ;;
    greant-privileges-on-db)
        grant_privileges_on_db "${@:2}"
        return $?
        ;;
    healthcheck)
        healthcheck
        return $?
        ;;
    *)
        echo "> Unknown command: ${COMMAND_NAMESPACE}"
        echo "  Usage: db-util <command> [args]"
        return 1
        ;;
    esac

}

main "${@}"
exit $?
